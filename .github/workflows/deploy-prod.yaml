name: Deploy Realm Configuration

on:
  push:
    branches:
      - test

jobs:
  render-and-deploy:
    name: Render and Deploy
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-go@v5
        with:
          go-version: '1.25'

      - name: Install Gok
        run: go install github.com/sap-gg/gok@1a620b7bffcc85cc3e241a90997fea0ba15180d5

      - name: Install SOPS
        run: |
          SOPS_VERSION="v3.10.2"
          curl --retry 7 -Lo sops "https://github.com/getsops/sops/releases/download/${SOPS_VERSION}/sops-${SOPS_VERSION}.linux.amd64"
          chmod +x sops
          sudo mv sops /usr/local/bin/

      - name: Import SOPS and SSH Keys
        env:
          SOPS_AGE_KEY: ${{ secrets.SOPS_AGE_KEY }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          # Set up SOPS key
          mkdir -p ~/.config/sops/age
          echo "$SOPS_AGE_KEY" > ~/.config/sops/age/keys.txt
          
          # Set up SSH key
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Render Artifact
        id: render
        run: |
          ARTIFACT_NAME="realm-${{ github.sha }}.tar.gz"
          echo "ARTIFACT_NAME=${ARTIFACT_NAME}" >> $GITHUB_OUTPUT

          echo "Rendering artifact..."
          sops -d secrets/production.sops.yaml | gok --log-level=debug render \
            --all-targets \
            -f values/production.yaml \
            -s - \
            -o "$ARTIFACT_NAME"

      - name: Deploy to Server
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
        run: |
          ARTIFACT_NAME=${{ steps.render.outputs.ARTIFACT_NAME }}
          REMOTE_ARTIFACT_PATH="/tmp/${ARTIFACT_NAME}"
          DESTINATION_PATH="/opt/minecraft/server"

          echo "Copying artifact to server..."
          scp -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa \
            "$ARTIFACT_NAME" \
            "${SSH_USER}@${SSH_HOST}:${REMOTE_ARTIFACT_PATH}"

          echo "Applying artifact on server..."
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa \
            "${SSH_USER}@${SSH_HOST}" \
            "gok apply ${REMOTE_ARTIFACT_PATH} --destination ${DESTINATION_PATH}"

      - name: Cleanup
        if: always()
        run: |
          echo "Cleaning up local keys and artifact..."
          rm -f ~/.config/sops/age/keys.txt
          rm -f ~/.ssh/id_rsa
          rm -f "realm-${{ github.sha }}.tar.gz"
